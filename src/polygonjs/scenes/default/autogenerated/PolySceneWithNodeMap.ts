import { ParamValueSerializedTypeMap } from "@polygonjs/polygonjs/dist/src/engine/params/types/ParamValueSerializedTypeMap";

import { PolyScene } from "@polygonjs/polygonjs/dist/src/engine/scene/PolyScene";
// obj
import { GeoObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/Geo";
import { MaterialsNetworkObjNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/obj/MaterialsNetwork";
// mat
import { MeshBasicBuilderMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/MeshBasicBuilder";
import { MeshStandardBuilderMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/MeshStandardBuilder";
import { MeshStandardMatNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/mat/MeshStandard";
// sop
import { AreaLightSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/AreaLight";
import { AttribCastSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/AttribCast";
import { CameraControlsSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/CameraControls";
import { CopySopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Copy";
import { FileGLTFSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/FileGLTF";
import { HemisphereLightSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/HemisphereLight";
import { HierarchySopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Hierarchy";
import { MaterialSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Material";
import { MergeSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Merge";
import { PerspectiveCameraSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/PerspectiveCamera";
import { PlaneSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Plane";
import { PolarTransformSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/PolarTransform";
import { SphereSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Sphere";
import { TransformSopNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/sop/Transform";
// dist
import { OcclusionSopNode } from "@polygonjs/plugin-occlusion/dist/index.es";
// event
import { CameraOrbitControlsEventNode } from "@polygonjs/polygonjs/dist/src/engine/nodes/event/CameraOrbitControls";

export class PolySceneWithNodeMap_default extends PolyScene {
  node(path: "/MAT"): MaterialsNetworkObjNode;
  node(path: "/MAT/meshStandard_NO_OCCLUSION"): MeshStandardMatNode;
  node(path: "/MAT/meshBasicBuilder_OCCLUSION"): MeshBasicBuilderMatNode;
  node(path: "/MAT/meshStandardBuilder_OCCLUSION"): MeshStandardBuilderMatNode;
  node(path: "/dogWithOcclusion"): GeoObjNode;
  node(path: "/dogWithOcclusion/file1"): FileGLTFSopNode;
  node(path: "/dogWithOcclusion/hierarchy1"): HierarchySopNode;
  node(path: "/dogWithOcclusion/occlusion1"): OcclusionSopNode;
  node(path: "/dogWithOcclusion/attribCast1"): AttribCastSopNode;
  node(path: "/dogWithOcclusion/material1"): MaterialSopNode;
  node(path: "/spheres"): GeoObjNode;
  node(path: "/spheres/plane1"): PlaneSopNode;
  node(path: "/spheres/sphere1"): SphereSopNode;
  node(path: "/spheres/copy1"): CopySopNode;
  node(path: "/spheres/plane2"): PlaneSopNode;
  node(path: "/spheres/merge1"): MergeSopNode;
  node(path: "/spheres/occlusion1"): OcclusionSopNode;
  node(path: "/spheres/material1"): MaterialSopNode;
  node(path: "/headWithOcclusion"): GeoObjNode;
  node(path: "/headWithOcclusion/attribCast1"): AttribCastSopNode;
  node(path: "/headWithOcclusion/file1"): FileGLTFSopNode;
  node(path: "/headWithOcclusion/hierarchy1"): HierarchySopNode;
  node(path: "/headWithOcclusion/material1"): MaterialSopNode;
  node(path: "/headWithOcclusion/occlusion1"): OcclusionSopNode;
  node(path: "/dogWithoutOcclusion"): GeoObjNode;
  node(path: "/dogWithoutOcclusion/file1"): FileGLTFSopNode;
  node(path: "/dogWithoutOcclusion/hierarchy1"): HierarchySopNode;
  node(path: "/dogWithoutOcclusion/material1"): MaterialSopNode;
  node(path: "/dogWithoutOcclusion/transform1"): TransformSopNode;
  node(path: "/dogWithOcclusionAndLighting"): GeoObjNode;
  node(path: "/dogWithOcclusionAndLighting/attribCast1"): AttribCastSopNode;
  node(path: "/dogWithOcclusionAndLighting/file1"): FileGLTFSopNode;
  node(path: "/dogWithOcclusionAndLighting/hierarchy1"): HierarchySopNode;
  node(path: "/dogWithOcclusionAndLighting/material1"): MaterialSopNode;
  node(path: "/dogWithOcclusionAndLighting/occlusion1"): OcclusionSopNode;
  node(path: "/dogWithOcclusionAndLighting/transform1"): TransformSopNode;
  node(path: "/cameras"): GeoObjNode;
  node(path: "/cameras/perspectiveCamera1"): PerspectiveCameraSopNode;
  node(path: "/cameras/cameraControls1"): CameraControlsSopNode;
  node(
    path: "/cameras/cameraControls1/cameraOrbitControls1"
  ): CameraOrbitControlsEventNode;
  node(path: "/lights"): GeoObjNode;
  node(path: "/lights/areaLight1"): AreaLightSopNode;
  node(path: "/lights/polarTransform1"): PolarTransformSopNode;
  node(path: "/lights/hemisphereLight1"): HemisphereLightSopNode;
  node(path: "/lights/merge1"): MergeSopNode;
  node(
    path: string
  ): any /* we need any for now as otherwise an error occurs when adding plugins to the overloaded methods */ {
    return super.node(path);
  }
}

export interface PolySceneProps_default {
  "MAT-meshStandard_NO_OCCLUSION--default"?: ParamValueSerializedTypeMap["folder"];
  "MAT-meshStandard_NO_OCCLUSION--color"?: ParamValueSerializedTypeMap["color"];
  "MAT-meshStandard_NO_OCCLUSION--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--colorr"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--colorg"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--colorb"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--useVertexColors"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandard_NO_OCCLUSION--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandard_NO_OCCLUSION--opacity"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--textures"?: ParamValueSerializedTypeMap["folder"];
  "MAT-meshStandard_NO_OCCLUSION--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandard_NO_OCCLUSION--map"?: ParamValueSerializedTypeMap["node_path"];
  "MAT-meshStandard_NO_OCCLUSION--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandard_NO_OCCLUSION--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "MAT-meshStandard_NO_OCCLUSION--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandard_NO_OCCLUSION--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "MAT-meshStandard_NO_OCCLUSION--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--useBumpMap"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandard_NO_OCCLUSION--bumpMap"?: ParamValueSerializedTypeMap["node_path"];
  "MAT-meshStandard_NO_OCCLUSION--bumpScale"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--bumpBias"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--useDisplacementMap"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandard_NO_OCCLUSION--displacementMap"?: ParamValueSerializedTypeMap["node_path"];
  "MAT-meshStandard_NO_OCCLUSION--displacementScale"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--displacementBias"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--emissive"?: ParamValueSerializedTypeMap["color"];
  "MAT-meshStandard_NO_OCCLUSION--emissive-emissiver"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--emissive-emissiveg"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--emissive-emissiveb"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--emissiver"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--emissiveg"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--emissiveb"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--useEmissiveMap"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandard_NO_OCCLUSION--emissiveMap"?: ParamValueSerializedTypeMap["node_path"];
  "MAT-meshStandard_NO_OCCLUSION--emissiveIntensity"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandard_NO_OCCLUSION--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "MAT-meshStandard_NO_OCCLUSION--envMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandard_NO_OCCLUSION--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "MAT-meshStandard_NO_OCCLUSION--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--useNormalMap"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandard_NO_OCCLUSION--normalMap"?: ParamValueSerializedTypeMap["node_path"];
  "MAT-meshStandard_NO_OCCLUSION--normalMapType"?: ParamValueSerializedTypeMap["integer"];
  "MAT-meshStandard_NO_OCCLUSION--normalScale"?: ParamValueSerializedTypeMap["vector2"];
  "MAT-meshStandard_NO_OCCLUSION--normalScale-normalScalex"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--normalScale-normalScaley"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--normalScalex"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--normalScaley"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--normalScaleMult"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--useMetalnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandard_NO_OCCLUSION--metalnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "MAT-meshStandard_NO_OCCLUSION--metalness"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--useRoughnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandard_NO_OCCLUSION--roughnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "MAT-meshStandard_NO_OCCLUSION--roughness"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--advanced"?: ParamValueSerializedTypeMap["folder"];
  "MAT-meshStandard_NO_OCCLUSION--flatShading"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandard_NO_OCCLUSION--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandard_NO_OCCLUSION--front"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandard_NO_OCCLUSION--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandard_NO_OCCLUSION--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandard_NO_OCCLUSION--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandard_NO_OCCLUSION--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandard_NO_OCCLUSION--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandard_NO_OCCLUSION--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandard_NO_OCCLUSION--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandard_NO_OCCLUSION--blending"?: ParamValueSerializedTypeMap["integer"];
  "MAT-meshStandard_NO_OCCLUSION--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandard_NO_OCCLUSION--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandard_NO_OCCLUSION--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "MAT-meshStandard_NO_OCCLUSION--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "MAT-meshStandard_NO_OCCLUSION--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandard_NO_OCCLUSION--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandard_NO_OCCLUSION--wireframeLinecap"?: ParamValueSerializedTypeMap["integer"];
  "MAT-meshStandard_NO_OCCLUSION--wireframeLinejoin"?: ParamValueSerializedTypeMap["integer"];
  "MAT-meshStandard_NO_OCCLUSION--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshBasicBuilder_OCCLUSION--default"?: ParamValueSerializedTypeMap["folder"];
  "MAT-meshBasicBuilder_OCCLUSION--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshBasicBuilder_OCCLUSION--opacity"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshBasicBuilder_OCCLUSION--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshBasicBuilder_OCCLUSION--textures"?: ParamValueSerializedTypeMap["folder"];
  "MAT-meshBasicBuilder_OCCLUSION--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshBasicBuilder_OCCLUSION--map"?: ParamValueSerializedTypeMap["node_path"];
  "MAT-meshBasicBuilder_OCCLUSION--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshBasicBuilder_OCCLUSION--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "MAT-meshBasicBuilder_OCCLUSION--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshBasicBuilder_OCCLUSION--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "MAT-meshBasicBuilder_OCCLUSION--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshBasicBuilder_OCCLUSION--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshBasicBuilder_OCCLUSION--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "MAT-meshBasicBuilder_OCCLUSION--combine"?: ParamValueSerializedTypeMap["integer"];
  "MAT-meshBasicBuilder_OCCLUSION--reflectivity"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshBasicBuilder_OCCLUSION--refractionRatio"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshBasicBuilder_OCCLUSION--advanced"?: ParamValueSerializedTypeMap["folder"];
  "MAT-meshBasicBuilder_OCCLUSION--setBuilderNode"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshBasicBuilder_OCCLUSION--builderNode"?: ParamValueSerializedTypeMap["node_path"];
  "MAT-meshBasicBuilder_OCCLUSION--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshBasicBuilder_OCCLUSION--front"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshBasicBuilder_OCCLUSION--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshBasicBuilder_OCCLUSION--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshBasicBuilder_OCCLUSION--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshBasicBuilder_OCCLUSION--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshBasicBuilder_OCCLUSION--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshBasicBuilder_OCCLUSION--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshBasicBuilder_OCCLUSION--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshBasicBuilder_OCCLUSION--blending"?: ParamValueSerializedTypeMap["integer"];
  "MAT-meshBasicBuilder_OCCLUSION--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshBasicBuilder_OCCLUSION--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshBasicBuilder_OCCLUSION--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "MAT-meshBasicBuilder_OCCLUSION--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "MAT-meshBasicBuilder_OCCLUSION--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshBasicBuilder_OCCLUSION--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshBasicBuilder_OCCLUSION--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshBasicBuilder_OCCLUSION--overrideCustomMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshBasicBuilder_OCCLUSION--createCustomMatDistance"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshBasicBuilder_OCCLUSION--createCustomMatDepth"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshBasicBuilder_OCCLUSION--createCustomMatDepthDOF"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshBasicBuilder_OCCLUSION--occlusionAmount"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandardBuilder_OCCLUSION--default"?: ParamValueSerializedTypeMap["folder"];
  "MAT-meshStandardBuilder_OCCLUSION--transparent"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--opacity"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandardBuilder_OCCLUSION--alphaTest"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandardBuilder_OCCLUSION--textures"?: ParamValueSerializedTypeMap["folder"];
  "MAT-meshStandardBuilder_OCCLUSION--useMap"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--map"?: ParamValueSerializedTypeMap["node_path"];
  "MAT-meshStandardBuilder_OCCLUSION--useAlphaMap"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--alphaMap"?: ParamValueSerializedTypeMap["node_path"];
  "MAT-meshStandardBuilder_OCCLUSION--useAOMap"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--aoMap"?: ParamValueSerializedTypeMap["node_path"];
  "MAT-meshStandardBuilder_OCCLUSION--aoMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandardBuilder_OCCLUSION--useBumpMap"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--bumpMap"?: ParamValueSerializedTypeMap["node_path"];
  "MAT-meshStandardBuilder_OCCLUSION--bumpScale"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandardBuilder_OCCLUSION--bumpBias"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandardBuilder_OCCLUSION--useDisplacementMap"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--displacementMap"?: ParamValueSerializedTypeMap["node_path"];
  "MAT-meshStandardBuilder_OCCLUSION--displacementScale"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandardBuilder_OCCLUSION--displacementBias"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandardBuilder_OCCLUSION--emissive"?: ParamValueSerializedTypeMap["color"];
  "MAT-meshStandardBuilder_OCCLUSION--emissive-emissiver"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandardBuilder_OCCLUSION--emissive-emissiveg"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandardBuilder_OCCLUSION--emissive-emissiveb"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandardBuilder_OCCLUSION--emissiver"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandardBuilder_OCCLUSION--emissiveg"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandardBuilder_OCCLUSION--emissiveb"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandardBuilder_OCCLUSION--useEmissiveMap"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--emissiveMap"?: ParamValueSerializedTypeMap["node_path"];
  "MAT-meshStandardBuilder_OCCLUSION--emissiveIntensity"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandardBuilder_OCCLUSION--useEnvMap"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--envMap"?: ParamValueSerializedTypeMap["node_path"];
  "MAT-meshStandardBuilder_OCCLUSION--envMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandardBuilder_OCCLUSION--useLightMap"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--lightMap"?: ParamValueSerializedTypeMap["node_path"];
  "MAT-meshStandardBuilder_OCCLUSION--lightMapIntensity"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandardBuilder_OCCLUSION--useNormalMap"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--normalMap"?: ParamValueSerializedTypeMap["node_path"];
  "MAT-meshStandardBuilder_OCCLUSION--normalMapType"?: ParamValueSerializedTypeMap["integer"];
  "MAT-meshStandardBuilder_OCCLUSION--normalScale"?: ParamValueSerializedTypeMap["vector2"];
  "MAT-meshStandardBuilder_OCCLUSION--normalScale-normalScalex"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandardBuilder_OCCLUSION--normalScale-normalScaley"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandardBuilder_OCCLUSION--normalScalex"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandardBuilder_OCCLUSION--normalScaley"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandardBuilder_OCCLUSION--normalScaleMult"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandardBuilder_OCCLUSION--useMetalnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--metalnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "MAT-meshStandardBuilder_OCCLUSION--metalness"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandardBuilder_OCCLUSION--useRoughnessMap"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--roughnessMap"?: ParamValueSerializedTypeMap["node_path"];
  "MAT-meshStandardBuilder_OCCLUSION--roughness"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandardBuilder_OCCLUSION--advanced"?: ParamValueSerializedTypeMap["folder"];
  "MAT-meshStandardBuilder_OCCLUSION--setBuilderNode"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--builderNode"?: ParamValueSerializedTypeMap["node_path"];
  "MAT-meshStandardBuilder_OCCLUSION--doubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--front"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--overrideShadowSide"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--shadowDoubleSided"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--shadowFront"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--colorWrite"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--depthWrite"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--depthTest"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--premultipliedAlpha"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--blending"?: ParamValueSerializedTypeMap["integer"];
  "MAT-meshStandardBuilder_OCCLUSION--dithering"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--polygonOffset"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--polygonOffsetFactor"?: ParamValueSerializedTypeMap["integer"];
  "MAT-meshStandardBuilder_OCCLUSION--polygonOffsetUnits"?: ParamValueSerializedTypeMap["integer"];
  "MAT-meshStandardBuilder_OCCLUSION--wireframe"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--wireframeLinewidth"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandardBuilder_OCCLUSION--useFog"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--shadowPCSS"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--shadowPCSSFilterSize"?: ParamValueSerializedTypeMap["float"];
  "MAT-meshStandardBuilder_OCCLUSION--overrideCustomMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--createCustomMatDistance"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--createCustomMatDepth"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--createCustomMatDepthDOF"?: ParamValueSerializedTypeMap["boolean"];
  "MAT-meshStandardBuilder_OCCLUSION--occlusionAmount"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--transform"?: ParamValueSerializedTypeMap["folder"];
  "dogWithOcclusion--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "dogWithOcclusion--t"?: ParamValueSerializedTypeMap["vector3"];
  "dogWithOcclusion--t-tx"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--t-ty"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--t-tz"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--tx"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--ty"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--tz"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--r"?: ParamValueSerializedTypeMap["vector3"];
  "dogWithOcclusion--r-rx"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--r-ry"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--r-rz"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--rx"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--ry"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--rz"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--s"?: ParamValueSerializedTypeMap["vector3"];
  "dogWithOcclusion--s-sx"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--s-sy"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--s-sz"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--sx"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--sy"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--sz"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--scale"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "dogWithOcclusion--display"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "dogWithOcclusion--CAD"?: ParamValueSerializedTypeMap["folder"];
  "dogWithOcclusion--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "dogWithOcclusion--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "dogWithOcclusion--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion--CSG"?: ParamValueSerializedTypeMap["folder"];
  "dogWithOcclusion--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "dogWithOcclusion--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "dogWithOcclusion--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "dogWithOcclusion--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion--QUADSplitQuads"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion--QUADWireframeColor"?: ParamValueSerializedTypeMap["color"];
  "dogWithOcclusion--QUADWireframeColor-QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--QUADWireframeColor-QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--QUADWireframeColor-QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--QUADCenter"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion--QUADInnerRadius"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion--QUADOuterRadius"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion--QUADPointAttributes"?: ParamValueSerializedTypeMap["string"];
  "dogWithOcclusion--QUADPrimitiveAttributes"?: ParamValueSerializedTypeMap["string"];
  "dogWithOcclusion--TET"?: ParamValueSerializedTypeMap["folder"];
  "dogWithOcclusion--TetScale"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion-file1--url"?: ParamValueSerializedTypeMap["string"];
  "dogWithOcclusion-file1--draco"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion-file1--ktx2"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion-file1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion-file1--reload"?: ParamValueSerializedTypeMap["button"];
  "dogWithOcclusion-hierarchy1--mode"?: ParamValueSerializedTypeMap["integer"];
  "dogWithOcclusion-hierarchy1--levels"?: ParamValueSerializedTypeMap["integer"];
  "dogWithOcclusion-hierarchy1--objectMask"?: ParamValueSerializedTypeMap["string"];
  "dogWithOcclusion-hierarchy1--addChildMode"?: ParamValueSerializedTypeMap["integer"];
  "dogWithOcclusion-occlusion1--attribName"?: ParamValueSerializedTypeMap["string"];
  "dogWithOcclusion-occlusion1--samples"?: ParamValueSerializedTypeMap["integer"];
  "dogWithOcclusion-occlusion1--bufferResolution"?: ParamValueSerializedTypeMap["integer"];
  "dogWithOcclusion-occlusion1--bias"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusion-attribCast1--castAttributes"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion-attribCast1--mask"?: ParamValueSerializedTypeMap["string"];
  "dogWithOcclusion-attribCast1--castIndex"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion-attribCast1--type"?: ParamValueSerializedTypeMap["integer"];
  "dogWithOcclusion-material1--group"?: ParamValueSerializedTypeMap["string"];
  "dogWithOcclusion-material1--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion-material1--material"?: ParamValueSerializedTypeMap["node_path"];
  "dogWithOcclusion-material1--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion-material1--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion-material1--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusion-material1--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "dogWithOcclusion-material1--texDest0"?: ParamValueSerializedTypeMap["string"];
  "spheres--transform"?: ParamValueSerializedTypeMap["folder"];
  "spheres--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "spheres--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "spheres--t"?: ParamValueSerializedTypeMap["vector3"];
  "spheres--t-tx"?: ParamValueSerializedTypeMap["float"];
  "spheres--t-ty"?: ParamValueSerializedTypeMap["float"];
  "spheres--t-tz"?: ParamValueSerializedTypeMap["float"];
  "spheres--tx"?: ParamValueSerializedTypeMap["float"];
  "spheres--ty"?: ParamValueSerializedTypeMap["float"];
  "spheres--tz"?: ParamValueSerializedTypeMap["float"];
  "spheres--r"?: ParamValueSerializedTypeMap["vector3"];
  "spheres--r-rx"?: ParamValueSerializedTypeMap["float"];
  "spheres--r-ry"?: ParamValueSerializedTypeMap["float"];
  "spheres--r-rz"?: ParamValueSerializedTypeMap["float"];
  "spheres--rx"?: ParamValueSerializedTypeMap["float"];
  "spheres--ry"?: ParamValueSerializedTypeMap["float"];
  "spheres--rz"?: ParamValueSerializedTypeMap["float"];
  "spheres--s"?: ParamValueSerializedTypeMap["vector3"];
  "spheres--s-sx"?: ParamValueSerializedTypeMap["float"];
  "spheres--s-sy"?: ParamValueSerializedTypeMap["float"];
  "spheres--s-sz"?: ParamValueSerializedTypeMap["float"];
  "spheres--sx"?: ParamValueSerializedTypeMap["float"];
  "spheres--sy"?: ParamValueSerializedTypeMap["float"];
  "spheres--sz"?: ParamValueSerializedTypeMap["float"];
  "spheres--scale"?: ParamValueSerializedTypeMap["float"];
  "spheres--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "spheres--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "spheres--display"?: ParamValueSerializedTypeMap["boolean"];
  "spheres--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "spheres--CAD"?: ParamValueSerializedTypeMap["folder"];
  "spheres--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "spheres--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "spheres--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "spheres--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "spheres--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "spheres--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "spheres--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "spheres--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "spheres--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "spheres--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "spheres--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "spheres--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "spheres--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "spheres--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "spheres--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "spheres--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "spheres--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "spheres--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "spheres--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "spheres--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "spheres--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "spheres--CSG"?: ParamValueSerializedTypeMap["folder"];
  "spheres--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "spheres--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "spheres--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "spheres--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "spheres--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "spheres--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "spheres--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "spheres--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "spheres--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "spheres--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "spheres--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "spheres--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "spheres--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "spheres--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "spheres--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "spheres--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "spheres--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "spheres--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "spheres--QUADSplitQuads"?: ParamValueSerializedTypeMap["boolean"];
  "spheres--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "spheres--QUADWireframeColor"?: ParamValueSerializedTypeMap["color"];
  "spheres--QUADWireframeColor-QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "spheres--QUADWireframeColor-QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "spheres--QUADWireframeColor-QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "spheres--QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "spheres--QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "spheres--QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "spheres--QUADCenter"?: ParamValueSerializedTypeMap["boolean"];
  "spheres--QUADInnerRadius"?: ParamValueSerializedTypeMap["boolean"];
  "spheres--QUADOuterRadius"?: ParamValueSerializedTypeMap["boolean"];
  "spheres--QUADPointAttributes"?: ParamValueSerializedTypeMap["string"];
  "spheres--QUADPrimitiveAttributes"?: ParamValueSerializedTypeMap["string"];
  "spheres--TET"?: ParamValueSerializedTypeMap["folder"];
  "spheres--TetScale"?: ParamValueSerializedTypeMap["float"];
  "spheres--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "spheres--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "spheres--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "spheres--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "spheres--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "spheres--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "spheres--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "spheres-plane1--size"?: ParamValueSerializedTypeMap["vector2"];
  "spheres-plane1--size-sizex"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane1--size-sizey"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane1--sizex"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane1--sizey"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane1--useSegmentsCount"?: ParamValueSerializedTypeMap["boolean"];
  "spheres-plane1--stepSize"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane1--segments"?: ParamValueSerializedTypeMap["vector2"];
  "spheres-plane1--segments-segmentsx"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane1--segments-segmentsy"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane1--segmentsx"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane1--segmentsy"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane1--direction"?: ParamValueSerializedTypeMap["vector3"];
  "spheres-plane1--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane1--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane1--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane1--directionx"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane1--directiony"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane1--directionz"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane1--center"?: ParamValueSerializedTypeMap["vector3"];
  "spheres-plane1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane1--centerx"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane1--centery"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane1--centerz"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane1--asLines"?: ParamValueSerializedTypeMap["boolean"];
  "spheres-sphere1--type"?: ParamValueSerializedTypeMap["integer"];
  "spheres-sphere1--radius"?: ParamValueSerializedTypeMap["float"];
  "spheres-sphere1--resolution"?: ParamValueSerializedTypeMap["vector2"];
  "spheres-sphere1--resolution-resolutionx"?: ParamValueSerializedTypeMap["float"];
  "spheres-sphere1--resolution-resolutiony"?: ParamValueSerializedTypeMap["float"];
  "spheres-sphere1--resolutionx"?: ParamValueSerializedTypeMap["float"];
  "spheres-sphere1--resolutiony"?: ParamValueSerializedTypeMap["float"];
  "spheres-sphere1--open"?: ParamValueSerializedTypeMap["boolean"];
  "spheres-sphere1--phiStart"?: ParamValueSerializedTypeMap["float"];
  "spheres-sphere1--phiLength"?: ParamValueSerializedTypeMap["float"];
  "spheres-sphere1--thetaStart"?: ParamValueSerializedTypeMap["float"];
  "spheres-sphere1--thetaLength"?: ParamValueSerializedTypeMap["float"];
  "spheres-sphere1--detail"?: ParamValueSerializedTypeMap["integer"];
  "spheres-sphere1--center"?: ParamValueSerializedTypeMap["vector3"];
  "spheres-sphere1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "spheres-sphere1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "spheres-sphere1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "spheres-sphere1--centerx"?: ParamValueSerializedTypeMap["float"];
  "spheres-sphere1--centery"?: ParamValueSerializedTypeMap["float"];
  "spheres-sphere1--centerz"?: ParamValueSerializedTypeMap["float"];
  "spheres-sphere1--asLines"?: ParamValueSerializedTypeMap["boolean"];
  "spheres-copy1--srcGroup"?: ParamValueSerializedTypeMap["string"];
  "spheres-copy1--templateGroup"?: ParamValueSerializedTypeMap["string"];
  "spheres-copy1--count"?: ParamValueSerializedTypeMap["integer"];
  "spheres-copy1--t"?: ParamValueSerializedTypeMap["vector3"];
  "spheres-copy1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "spheres-copy1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "spheres-copy1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "spheres-copy1--tx"?: ParamValueSerializedTypeMap["float"];
  "spheres-copy1--ty"?: ParamValueSerializedTypeMap["float"];
  "spheres-copy1--tz"?: ParamValueSerializedTypeMap["float"];
  "spheres-copy1--r"?: ParamValueSerializedTypeMap["vector3"];
  "spheres-copy1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "spheres-copy1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "spheres-copy1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "spheres-copy1--rx"?: ParamValueSerializedTypeMap["float"];
  "spheres-copy1--ry"?: ParamValueSerializedTypeMap["float"];
  "spheres-copy1--rz"?: ParamValueSerializedTypeMap["float"];
  "spheres-copy1--s"?: ParamValueSerializedTypeMap["vector3"];
  "spheres-copy1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "spheres-copy1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "spheres-copy1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "spheres-copy1--sx"?: ParamValueSerializedTypeMap["float"];
  "spheres-copy1--sy"?: ParamValueSerializedTypeMap["float"];
  "spheres-copy1--sz"?: ParamValueSerializedTypeMap["float"];
  "spheres-copy1--scale"?: ParamValueSerializedTypeMap["float"];
  "spheres-copy1--transformOnly"?: ParamValueSerializedTypeMap["boolean"];
  "spheres-copy1--transformMode"?: ParamValueSerializedTypeMap["integer"];
  "spheres-copy1--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "spheres-copy1--copyAttributes"?: ParamValueSerializedTypeMap["boolean"];
  "spheres-copy1--attributesToCopy"?: ParamValueSerializedTypeMap["string"];
  "spheres-copy1--useCopyExpr"?: ParamValueSerializedTypeMap["boolean"];
  "spheres-plane2--size"?: ParamValueSerializedTypeMap["vector2"];
  "spheres-plane2--size-sizex"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane2--size-sizey"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane2--sizex"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane2--sizey"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane2--useSegmentsCount"?: ParamValueSerializedTypeMap["boolean"];
  "spheres-plane2--stepSize"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane2--segments"?: ParamValueSerializedTypeMap["vector2"];
  "spheres-plane2--segments-segmentsx"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane2--segments-segmentsy"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane2--segmentsx"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane2--segmentsy"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane2--direction"?: ParamValueSerializedTypeMap["vector3"];
  "spheres-plane2--direction-directionx"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane2--direction-directiony"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane2--direction-directionz"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane2--directionx"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane2--directiony"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane2--directionz"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane2--center"?: ParamValueSerializedTypeMap["vector3"];
  "spheres-plane2--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane2--center-centery"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane2--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane2--centerx"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane2--centery"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane2--centerz"?: ParamValueSerializedTypeMap["float"];
  "spheres-plane2--asLines"?: ParamValueSerializedTypeMap["boolean"];
  "spheres-merge1--compact"?: ParamValueSerializedTypeMap["boolean"];
  "spheres-merge1--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "spheres-merge1--inputsCount"?: ParamValueSerializedTypeMap["integer"];
  "spheres-occlusion1--attribName"?: ParamValueSerializedTypeMap["string"];
  "spheres-occlusion1--samples"?: ParamValueSerializedTypeMap["integer"];
  "spheres-occlusion1--bufferResolution"?: ParamValueSerializedTypeMap["integer"];
  "spheres-occlusion1--bias"?: ParamValueSerializedTypeMap["float"];
  "spheres-material1--group"?: ParamValueSerializedTypeMap["string"];
  "spheres-material1--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "spheres-material1--material"?: ParamValueSerializedTypeMap["node_path"];
  "spheres-material1--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "spheres-material1--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "spheres-material1--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "spheres-material1--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "spheres-material1--texDest0"?: ParamValueSerializedTypeMap["string"];
  "headWithOcclusion--transform"?: ParamValueSerializedTypeMap["folder"];
  "headWithOcclusion--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "headWithOcclusion--t"?: ParamValueSerializedTypeMap["vector3"];
  "headWithOcclusion--t-tx"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--t-ty"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--t-tz"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--tx"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--ty"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--tz"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--r"?: ParamValueSerializedTypeMap["vector3"];
  "headWithOcclusion--r-rx"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--r-ry"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--r-rz"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--rx"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--ry"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--rz"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--s"?: ParamValueSerializedTypeMap["vector3"];
  "headWithOcclusion--s-sx"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--s-sy"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--s-sz"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--sx"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--sy"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--sz"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--scale"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "headWithOcclusion--display"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "headWithOcclusion--CAD"?: ParamValueSerializedTypeMap["folder"];
  "headWithOcclusion--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "headWithOcclusion--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "headWithOcclusion--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion--CSG"?: ParamValueSerializedTypeMap["folder"];
  "headWithOcclusion--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "headWithOcclusion--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "headWithOcclusion--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "headWithOcclusion--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion--QUADSplitQuads"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion--QUADWireframeColor"?: ParamValueSerializedTypeMap["color"];
  "headWithOcclusion--QUADWireframeColor-QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--QUADWireframeColor-QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--QUADWireframeColor-QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--QUADCenter"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion--QUADInnerRadius"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion--QUADOuterRadius"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion--QUADPointAttributes"?: ParamValueSerializedTypeMap["string"];
  "headWithOcclusion--QUADPrimitiveAttributes"?: ParamValueSerializedTypeMap["string"];
  "headWithOcclusion--TET"?: ParamValueSerializedTypeMap["folder"];
  "headWithOcclusion--TetScale"?: ParamValueSerializedTypeMap["float"];
  "headWithOcclusion--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion-attribCast1--castAttributes"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion-attribCast1--mask"?: ParamValueSerializedTypeMap["string"];
  "headWithOcclusion-attribCast1--castIndex"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion-attribCast1--type"?: ParamValueSerializedTypeMap["integer"];
  "headWithOcclusion-file1--url"?: ParamValueSerializedTypeMap["string"];
  "headWithOcclusion-file1--draco"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion-file1--ktx2"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion-file1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion-file1--reload"?: ParamValueSerializedTypeMap["button"];
  "headWithOcclusion-hierarchy1--mode"?: ParamValueSerializedTypeMap["integer"];
  "headWithOcclusion-hierarchy1--levels"?: ParamValueSerializedTypeMap["integer"];
  "headWithOcclusion-hierarchy1--objectMask"?: ParamValueSerializedTypeMap["string"];
  "headWithOcclusion-hierarchy1--addChildMode"?: ParamValueSerializedTypeMap["integer"];
  "headWithOcclusion-material1--group"?: ParamValueSerializedTypeMap["string"];
  "headWithOcclusion-material1--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion-material1--material"?: ParamValueSerializedTypeMap["node_path"];
  "headWithOcclusion-material1--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion-material1--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion-material1--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "headWithOcclusion-material1--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "headWithOcclusion-material1--texDest0"?: ParamValueSerializedTypeMap["string"];
  "headWithOcclusion-occlusion1--attribName"?: ParamValueSerializedTypeMap["string"];
  "headWithOcclusion-occlusion1--samples"?: ParamValueSerializedTypeMap["integer"];
  "headWithOcclusion-occlusion1--bufferResolution"?: ParamValueSerializedTypeMap["integer"];
  "headWithOcclusion-occlusion1--bias"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--transform"?: ParamValueSerializedTypeMap["folder"];
  "dogWithoutOcclusion--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithoutOcclusion--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "dogWithoutOcclusion--t"?: ParamValueSerializedTypeMap["vector3"];
  "dogWithoutOcclusion--t-tx"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--t-ty"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--t-tz"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--tx"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--ty"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--tz"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--r"?: ParamValueSerializedTypeMap["vector3"];
  "dogWithoutOcclusion--r-rx"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--r-ry"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--r-rz"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--rx"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--ry"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--rz"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--s"?: ParamValueSerializedTypeMap["vector3"];
  "dogWithoutOcclusion--s-sx"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--s-sy"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--s-sz"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--sx"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--sy"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--sz"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--scale"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithoutOcclusion--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "dogWithoutOcclusion--display"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithoutOcclusion--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "dogWithoutOcclusion--CAD"?: ParamValueSerializedTypeMap["folder"];
  "dogWithoutOcclusion--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithoutOcclusion--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "dogWithoutOcclusion--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithoutOcclusion--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "dogWithoutOcclusion--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithoutOcclusion--CSG"?: ParamValueSerializedTypeMap["folder"];
  "dogWithoutOcclusion--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "dogWithoutOcclusion--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "dogWithoutOcclusion--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithoutOcclusion--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "dogWithoutOcclusion--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithoutOcclusion--QUADSplitQuads"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithoutOcclusion--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithoutOcclusion--QUADWireframeColor"?: ParamValueSerializedTypeMap["color"];
  "dogWithoutOcclusion--QUADWireframeColor-QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--QUADWireframeColor-QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--QUADWireframeColor-QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--QUADCenter"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithoutOcclusion--QUADInnerRadius"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithoutOcclusion--QUADOuterRadius"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithoutOcclusion--QUADPointAttributes"?: ParamValueSerializedTypeMap["string"];
  "dogWithoutOcclusion--QUADPrimitiveAttributes"?: ParamValueSerializedTypeMap["string"];
  "dogWithoutOcclusion--TET"?: ParamValueSerializedTypeMap["folder"];
  "dogWithoutOcclusion--TetScale"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithoutOcclusion--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithoutOcclusion--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithoutOcclusion--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithoutOcclusion--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithoutOcclusion--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithoutOcclusion--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithoutOcclusion-file1--url"?: ParamValueSerializedTypeMap["string"];
  "dogWithoutOcclusion-file1--draco"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithoutOcclusion-file1--ktx2"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithoutOcclusion-file1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithoutOcclusion-file1--reload"?: ParamValueSerializedTypeMap["button"];
  "dogWithoutOcclusion-hierarchy1--mode"?: ParamValueSerializedTypeMap["integer"];
  "dogWithoutOcclusion-hierarchy1--levels"?: ParamValueSerializedTypeMap["integer"];
  "dogWithoutOcclusion-hierarchy1--objectMask"?: ParamValueSerializedTypeMap["string"];
  "dogWithoutOcclusion-hierarchy1--addChildMode"?: ParamValueSerializedTypeMap["integer"];
  "dogWithoutOcclusion-material1--group"?: ParamValueSerializedTypeMap["string"];
  "dogWithoutOcclusion-material1--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithoutOcclusion-material1--material"?: ParamValueSerializedTypeMap["node_path"];
  "dogWithoutOcclusion-material1--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithoutOcclusion-material1--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithoutOcclusion-material1--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithoutOcclusion-material1--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "dogWithoutOcclusion-material1--texDest0"?: ParamValueSerializedTypeMap["string"];
  "dogWithoutOcclusion-transform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "dogWithoutOcclusion-transform1--group"?: ParamValueSerializedTypeMap["string"];
  "dogWithoutOcclusion-transform1--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "dogWithoutOcclusion-transform1--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "dogWithoutOcclusion-transform1--pointGroup"?: ParamValueSerializedTypeMap["string"];
  "dogWithoutOcclusion-transform1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "dogWithoutOcclusion-transform1--t"?: ParamValueSerializedTypeMap["vector3"];
  "dogWithoutOcclusion-transform1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion-transform1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion-transform1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion-transform1--tx"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion-transform1--ty"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion-transform1--tz"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion-transform1--r"?: ParamValueSerializedTypeMap["vector3"];
  "dogWithoutOcclusion-transform1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion-transform1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion-transform1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion-transform1--rx"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion-transform1--ry"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion-transform1--rz"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion-transform1--s"?: ParamValueSerializedTypeMap["vector3"];
  "dogWithoutOcclusion-transform1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion-transform1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion-transform1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion-transform1--sx"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion-transform1--sy"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion-transform1--sz"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion-transform1--scale"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion-transform1--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "dogWithoutOcclusion-transform1--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion-transform1--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion-transform1--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion-transform1--pivotx"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion-transform1--pivoty"?: ParamValueSerializedTypeMap["float"];
  "dogWithoutOcclusion-transform1--pivotz"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--transform"?: ParamValueSerializedTypeMap["folder"];
  "dogWithOcclusionAndLighting--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "dogWithOcclusionAndLighting--t"?: ParamValueSerializedTypeMap["vector3"];
  "dogWithOcclusionAndLighting--t-tx"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--t-ty"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--t-tz"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--tx"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--ty"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--tz"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--r"?: ParamValueSerializedTypeMap["vector3"];
  "dogWithOcclusionAndLighting--r-rx"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--r-ry"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--r-rz"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--rx"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--ry"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--rz"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--s"?: ParamValueSerializedTypeMap["vector3"];
  "dogWithOcclusionAndLighting--s-sx"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--s-sy"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--s-sz"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--sx"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--sy"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--sz"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--scale"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "dogWithOcclusionAndLighting--display"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "dogWithOcclusionAndLighting--CAD"?: ParamValueSerializedTypeMap["folder"];
  "dogWithOcclusionAndLighting--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "dogWithOcclusionAndLighting--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "dogWithOcclusionAndLighting--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting--CSG"?: ParamValueSerializedTypeMap["folder"];
  "dogWithOcclusionAndLighting--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "dogWithOcclusionAndLighting--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "dogWithOcclusionAndLighting--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "dogWithOcclusionAndLighting--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting--QUADSplitQuads"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting--QUADWireframeColor"?: ParamValueSerializedTypeMap["color"];
  "dogWithOcclusionAndLighting--QUADWireframeColor-QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--QUADWireframeColor-QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--QUADWireframeColor-QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--QUADCenter"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting--QUADInnerRadius"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting--QUADOuterRadius"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting--QUADPointAttributes"?: ParamValueSerializedTypeMap["string"];
  "dogWithOcclusionAndLighting--QUADPrimitiveAttributes"?: ParamValueSerializedTypeMap["string"];
  "dogWithOcclusionAndLighting--TET"?: ParamValueSerializedTypeMap["folder"];
  "dogWithOcclusionAndLighting--TetScale"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting-attribCast1--castAttributes"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting-attribCast1--mask"?: ParamValueSerializedTypeMap["string"];
  "dogWithOcclusionAndLighting-attribCast1--castIndex"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting-attribCast1--type"?: ParamValueSerializedTypeMap["integer"];
  "dogWithOcclusionAndLighting-file1--url"?: ParamValueSerializedTypeMap["string"];
  "dogWithOcclusionAndLighting-file1--draco"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting-file1--ktx2"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting-file1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting-file1--reload"?: ParamValueSerializedTypeMap["button"];
  "dogWithOcclusionAndLighting-hierarchy1--mode"?: ParamValueSerializedTypeMap["integer"];
  "dogWithOcclusionAndLighting-hierarchy1--levels"?: ParamValueSerializedTypeMap["integer"];
  "dogWithOcclusionAndLighting-hierarchy1--objectMask"?: ParamValueSerializedTypeMap["string"];
  "dogWithOcclusionAndLighting-hierarchy1--addChildMode"?: ParamValueSerializedTypeMap["integer"];
  "dogWithOcclusionAndLighting-material1--group"?: ParamValueSerializedTypeMap["string"];
  "dogWithOcclusionAndLighting-material1--assignMat"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting-material1--material"?: ParamValueSerializedTypeMap["node_path"];
  "dogWithOcclusionAndLighting-material1--cloneMat"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting-material1--shareCustomUniforms"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting-material1--swapCurrentTex"?: ParamValueSerializedTypeMap["boolean"];
  "dogWithOcclusionAndLighting-material1--texSrc0"?: ParamValueSerializedTypeMap["string"];
  "dogWithOcclusionAndLighting-material1--texDest0"?: ParamValueSerializedTypeMap["string"];
  "dogWithOcclusionAndLighting-occlusion1--attribName"?: ParamValueSerializedTypeMap["string"];
  "dogWithOcclusionAndLighting-occlusion1--samples"?: ParamValueSerializedTypeMap["integer"];
  "dogWithOcclusionAndLighting-occlusion1--bufferResolution"?: ParamValueSerializedTypeMap["integer"];
  "dogWithOcclusionAndLighting-occlusion1--bias"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting-transform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "dogWithOcclusionAndLighting-transform1--group"?: ParamValueSerializedTypeMap["string"];
  "dogWithOcclusionAndLighting-transform1--objectMode"?: ParamValueSerializedTypeMap["integer"];
  "dogWithOcclusionAndLighting-transform1--objectTransformSpace"?: ParamValueSerializedTypeMap["integer"];
  "dogWithOcclusionAndLighting-transform1--pointGroup"?: ParamValueSerializedTypeMap["string"];
  "dogWithOcclusionAndLighting-transform1--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "dogWithOcclusionAndLighting-transform1--t"?: ParamValueSerializedTypeMap["vector3"];
  "dogWithOcclusionAndLighting-transform1--t-tx"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting-transform1--t-ty"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting-transform1--t-tz"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting-transform1--tx"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting-transform1--ty"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting-transform1--tz"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting-transform1--r"?: ParamValueSerializedTypeMap["vector3"];
  "dogWithOcclusionAndLighting-transform1--r-rx"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting-transform1--r-ry"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting-transform1--r-rz"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting-transform1--rx"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting-transform1--ry"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting-transform1--rz"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting-transform1--s"?: ParamValueSerializedTypeMap["vector3"];
  "dogWithOcclusionAndLighting-transform1--s-sx"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting-transform1--s-sy"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting-transform1--s-sz"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting-transform1--sx"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting-transform1--sy"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting-transform1--sz"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting-transform1--scale"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting-transform1--pivot"?: ParamValueSerializedTypeMap["vector3"];
  "dogWithOcclusionAndLighting-transform1--pivot-pivotx"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting-transform1--pivot-pivoty"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting-transform1--pivot-pivotz"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting-transform1--pivotx"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting-transform1--pivoty"?: ParamValueSerializedTypeMap["float"];
  "dogWithOcclusionAndLighting-transform1--pivotz"?: ParamValueSerializedTypeMap["float"];
  "cameras--transform"?: ParamValueSerializedTypeMap["folder"];
  "cameras--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "cameras--t"?: ParamValueSerializedTypeMap["vector3"];
  "cameras--t-tx"?: ParamValueSerializedTypeMap["float"];
  "cameras--t-ty"?: ParamValueSerializedTypeMap["float"];
  "cameras--t-tz"?: ParamValueSerializedTypeMap["float"];
  "cameras--tx"?: ParamValueSerializedTypeMap["float"];
  "cameras--ty"?: ParamValueSerializedTypeMap["float"];
  "cameras--tz"?: ParamValueSerializedTypeMap["float"];
  "cameras--r"?: ParamValueSerializedTypeMap["vector3"];
  "cameras--r-rx"?: ParamValueSerializedTypeMap["float"];
  "cameras--r-ry"?: ParamValueSerializedTypeMap["float"];
  "cameras--r-rz"?: ParamValueSerializedTypeMap["float"];
  "cameras--rx"?: ParamValueSerializedTypeMap["float"];
  "cameras--ry"?: ParamValueSerializedTypeMap["float"];
  "cameras--rz"?: ParamValueSerializedTypeMap["float"];
  "cameras--s"?: ParamValueSerializedTypeMap["vector3"];
  "cameras--s-sx"?: ParamValueSerializedTypeMap["float"];
  "cameras--s-sy"?: ParamValueSerializedTypeMap["float"];
  "cameras--s-sz"?: ParamValueSerializedTypeMap["float"];
  "cameras--sx"?: ParamValueSerializedTypeMap["float"];
  "cameras--sy"?: ParamValueSerializedTypeMap["float"];
  "cameras--sz"?: ParamValueSerializedTypeMap["float"];
  "cameras--scale"?: ParamValueSerializedTypeMap["float"];
  "cameras--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "cameras--display"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "cameras--CAD"?: ParamValueSerializedTypeMap["folder"];
  "cameras--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "cameras--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "cameras--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--CSG"?: ParamValueSerializedTypeMap["folder"];
  "cameras--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "cameras--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "cameras--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "cameras--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--QUADSplitQuads"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--QUADWireframeColor"?: ParamValueSerializedTypeMap["color"];
  "cameras--QUADWireframeColor-QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--QUADWireframeColor-QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--QUADWireframeColor-QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "cameras--QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "cameras--QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "cameras--QUADCenter"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--QUADInnerRadius"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--QUADOuterRadius"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--QUADPointAttributes"?: ParamValueSerializedTypeMap["string"];
  "cameras--QUADPrimitiveAttributes"?: ParamValueSerializedTypeMap["string"];
  "cameras--TET"?: ParamValueSerializedTypeMap["folder"];
  "cameras--TetScale"?: ParamValueSerializedTypeMap["float"];
  "cameras--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "cameras--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera1--default"?: ParamValueSerializedTypeMap["folder"];
  "cameras-perspectiveCamera1--fov"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--near"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--far"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--position"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera1--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--positionx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--positiony"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--positionz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--rotation"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-perspectiveCamera1--rotation-rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--rotation-rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--rotation-rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--rotationx"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--rotationy"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--rotationz"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera1--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-perspectiveCamera1--name"?: ParamValueSerializedTypeMap["string"];
  "cameras-perspectiveCamera1--updateTransformFromCamera"?: ParamValueSerializedTypeMap["button"];
  "cameras-perspectiveCamera1--PBR"?: ParamValueSerializedTypeMap["folder"];
  "cameras-perspectiveCamera1--apertureBlades"?: ParamValueSerializedTypeMap["integer"];
  "cameras-perspectiveCamera1--fStop"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--focusDistance"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--apertureRotation"?: ParamValueSerializedTypeMap["float"];
  "cameras-perspectiveCamera1--anamorphicRatio"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1--group"?: ParamValueSerializedTypeMap["string"];
  "cameras-cameraControls1--node"?: ParamValueSerializedTypeMap["node_path"];
  "cameras-cameraControls1-cameraOrbitControls1--main"?: ParamValueSerializedTypeMap["folder"];
  "cameras-cameraControls1-cameraOrbitControls1--enabled"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--allowPan"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--allowRotate"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--allowZoom"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--zoomSpeed"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--zoomToCursor"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--tdamping"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--damping"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--screenSpacePanning"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--rotateSpeed"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--limits"?: ParamValueSerializedTypeMap["folder"];
  "cameras-cameraControls1-cameraOrbitControls1--minDistance"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--maxDistance"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--minZoom"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--maxZoom"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--limitAzimuthAngle"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRange-azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--azimuthAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRange"?: ParamValueSerializedTypeMap["vector2"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRange-polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRange-polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRangex"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--polarAngleRangey"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--clampPosition"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--positionMin"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-cameraControls1-cameraOrbitControls1--positionMin-positionMinx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--positionMin-positionMiny"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--positionMin-positionMinz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--positionMinx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--positionMiny"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--positionMinz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--positionMax"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-cameraControls1-cameraOrbitControls1--positionMax-positionMaxx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--positionMax-positionMaxy"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--positionMax-positionMaxz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--positionMaxx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--positionMaxy"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--positionMaxz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--controls"?: ParamValueSerializedTypeMap["folder"];
  "cameras-cameraControls1-cameraOrbitControls1--leftMouseButton"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1-cameraOrbitControls1--middleMouseButton"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1-cameraOrbitControls1--rightMouseButton"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1-cameraOrbitControls1--oneFingerTouch"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1-cameraOrbitControls1--twoFingersTouch"?: ParamValueSerializedTypeMap["integer"];
  "cameras-cameraControls1-cameraOrbitControls1--misc"?: ParamValueSerializedTypeMap["folder"];
  "cameras-cameraControls1-cameraOrbitControls1--updateTargetEndMoveEnd"?: ParamValueSerializedTypeMap["boolean"];
  "cameras-cameraControls1-cameraOrbitControls1--target"?: ParamValueSerializedTypeMap["vector3"];
  "cameras-cameraControls1-cameraOrbitControls1--target-targetx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--target-targety"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--target-targetz"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--targetx"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--targety"?: ParamValueSerializedTypeMap["float"];
  "cameras-cameraControls1-cameraOrbitControls1--targetz"?: ParamValueSerializedTypeMap["float"];
  "lights--transform"?: ParamValueSerializedTypeMap["folder"];
  "lights--keepPosWhenParenting"?: ParamValueSerializedTypeMap["boolean"];
  "lights--rotationOrder"?: ParamValueSerializedTypeMap["integer"];
  "lights--t"?: ParamValueSerializedTypeMap["vector3"];
  "lights--t-tx"?: ParamValueSerializedTypeMap["float"];
  "lights--t-ty"?: ParamValueSerializedTypeMap["float"];
  "lights--t-tz"?: ParamValueSerializedTypeMap["float"];
  "lights--tx"?: ParamValueSerializedTypeMap["float"];
  "lights--ty"?: ParamValueSerializedTypeMap["float"];
  "lights--tz"?: ParamValueSerializedTypeMap["float"];
  "lights--r"?: ParamValueSerializedTypeMap["vector3"];
  "lights--r-rx"?: ParamValueSerializedTypeMap["float"];
  "lights--r-ry"?: ParamValueSerializedTypeMap["float"];
  "lights--r-rz"?: ParamValueSerializedTypeMap["float"];
  "lights--rx"?: ParamValueSerializedTypeMap["float"];
  "lights--ry"?: ParamValueSerializedTypeMap["float"];
  "lights--rz"?: ParamValueSerializedTypeMap["float"];
  "lights--s"?: ParamValueSerializedTypeMap["vector3"];
  "lights--s-sx"?: ParamValueSerializedTypeMap["float"];
  "lights--s-sy"?: ParamValueSerializedTypeMap["float"];
  "lights--s-sz"?: ParamValueSerializedTypeMap["float"];
  "lights--sx"?: ParamValueSerializedTypeMap["float"];
  "lights--sy"?: ParamValueSerializedTypeMap["float"];
  "lights--sz"?: ParamValueSerializedTypeMap["float"];
  "lights--scale"?: ParamValueSerializedTypeMap["float"];
  "lights--matrixAutoUpdate"?: ParamValueSerializedTypeMap["boolean"];
  "lights--updateTransformFromObject"?: ParamValueSerializedTypeMap["button"];
  "lights--display"?: ParamValueSerializedTypeMap["boolean"];
  "lights--renderOrder"?: ParamValueSerializedTypeMap["integer"];
  "lights--CAD"?: ParamValueSerializedTypeMap["folder"];
  "lights--CADLinearTolerance"?: ParamValueSerializedTypeMap["float"];
  "lights--CADAngularTolerance"?: ParamValueSerializedTypeMap["float"];
  "lights--CADCurveAbscissa"?: ParamValueSerializedTypeMap["float"];
  "lights--CADCurveTolerance"?: ParamValueSerializedTypeMap["float"];
  "lights--CADDisplayEdges"?: ParamValueSerializedTypeMap["boolean"];
  "lights--CADEdgesColor"?: ParamValueSerializedTypeMap["color"];
  "lights--CADEdgesColor-CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CADEdgesColor-CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CADEdgesColor-CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CADEdgesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CADEdgesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CADEdgesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CADDisplayMeshes"?: ParamValueSerializedTypeMap["boolean"];
  "lights--CADMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "lights--CADMeshesColor-CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CADMeshesColor-CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CADMeshesColor-CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CADMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CADMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CADMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "lights--CSG"?: ParamValueSerializedTypeMap["folder"];
  "lights--CSGFacetAngle"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColor"?: ParamValueSerializedTypeMap["color"];
  "lights--CSGLinesColor-CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColor-CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColor-CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGLinesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColor"?: ParamValueSerializedTypeMap["color"];
  "lights--CSGMeshesColor-CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColor-CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColor-CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGMeshesColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--CSGWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "lights--QUAD"?: ParamValueSerializedTypeMap["folder"];
  "lights--QUADTriangles"?: ParamValueSerializedTypeMap["boolean"];
  "lights--QUADSplitQuads"?: ParamValueSerializedTypeMap["boolean"];
  "lights--QUADWireframe"?: ParamValueSerializedTypeMap["boolean"];
  "lights--QUADWireframeColor"?: ParamValueSerializedTypeMap["color"];
  "lights--QUADWireframeColor-QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--QUADWireframeColor-QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--QUADWireframeColor-QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--QUADWireframeColorr"?: ParamValueSerializedTypeMap["float"];
  "lights--QUADWireframeColorg"?: ParamValueSerializedTypeMap["float"];
  "lights--QUADWireframeColorb"?: ParamValueSerializedTypeMap["float"];
  "lights--QUADCenter"?: ParamValueSerializedTypeMap["boolean"];
  "lights--QUADInnerRadius"?: ParamValueSerializedTypeMap["boolean"];
  "lights--QUADOuterRadius"?: ParamValueSerializedTypeMap["boolean"];
  "lights--QUADPointAttributes"?: ParamValueSerializedTypeMap["string"];
  "lights--QUADPrimitiveAttributes"?: ParamValueSerializedTypeMap["string"];
  "lights--TET"?: ParamValueSerializedTypeMap["folder"];
  "lights--TetScale"?: ParamValueSerializedTypeMap["float"];
  "lights--TetDisplayOuterMesh"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplayTetMesh"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplayLines"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplaySharedFaces"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplayPoints"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplayCenter"?: ParamValueSerializedTypeMap["boolean"];
  "lights--TetDisplaySphere"?: ParamValueSerializedTypeMap["boolean"];
  "lights-areaLight1--light"?: ParamValueSerializedTypeMap["folder"];
  "lights-areaLight1--color"?: ParamValueSerializedTypeMap["color"];
  "lights-areaLight1--color-colorr"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--color-colorg"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--color-colorb"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--colorr"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--colorg"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--colorb"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--intensity"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--width"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--height"?: ParamValueSerializedTypeMap["float"];
  "lights-areaLight1--showHelper"?: ParamValueSerializedTypeMap["boolean"];
  "lights-areaLight1--name"?: ParamValueSerializedTypeMap["string"];
  "lights-polarTransform1--applyOn"?: ParamValueSerializedTypeMap["integer"];
  "lights-polarTransform1--center"?: ParamValueSerializedTypeMap["vector3"];
  "lights-polarTransform1--center-centerx"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--center-centery"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--center-centerz"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--centerx"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--centery"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--centerz"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--longitude"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--latitude"?: ParamValueSerializedTypeMap["float"];
  "lights-polarTransform1--depth"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColor"?: ParamValueSerializedTypeMap["color"];
  "lights-hemisphereLight1--skyColor-skyColorr"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColor-skyColorg"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColor-skyColorb"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColorr"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColorg"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--skyColorb"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColor"?: ParamValueSerializedTypeMap["color"];
  "lights-hemisphereLight1--groundColor-groundColorr"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColor-groundColorg"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColor-groundColorb"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColorr"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColorg"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--groundColorb"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--intensity"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--position"?: ParamValueSerializedTypeMap["vector3"];
  "lights-hemisphereLight1--position-positionx"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--position-positiony"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--position-positionz"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--positionx"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--positiony"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--positionz"?: ParamValueSerializedTypeMap["float"];
  "lights-hemisphereLight1--name"?: ParamValueSerializedTypeMap["string"];
  "lights-merge1--compact"?: ParamValueSerializedTypeMap["boolean"];
  "lights-merge1--preserveMaterials"?: ParamValueSerializedTypeMap["boolean"];
  "lights-merge1--inputsCount"?: ParamValueSerializedTypeMap["integer"];
}
