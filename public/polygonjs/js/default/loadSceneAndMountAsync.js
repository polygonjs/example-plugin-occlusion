import{a as D}from"./chunk-4EIDCPOJ.js";import"./chunk-KBNISIIW.js";var M=(e=>(e.EXPORT_MANIFEST="scene/export_manifest.json",e.CODE_PREFIX="scene/code",e.PROPERTIES="scene/code/properties.json",e.EDITOR="scene/editor.json",e.ASSETS="scene/assets.json",e.POLYGONJS="js/all.js",e.SCENE_DATA_LOADER="js/sceneDataLoader.js",e.POLY_CONFIG="js/polyConfig.js",e.JS_FILES="scene/js_files.json",e.POSTER="images/poster.png",e))(M||{});var S=class{static async importSceneData(s){s.editorMode==null&&(s.editorMode=!1);let n=s.manifest,r=s.urlPrefix||M.CODE_PREFIX,c=Object.keys(n.nodes),a=[];for(let o of c){let t=n.nodes[o],h=`${r}/root/${o}.json?t=${t}`;a.push(h)}let i=`${r}/root.json?t=${n.root}`,l=`${r}/properties.json?t=${n.properties}`,d=[i,l];if(s.editorMode){let o=Date.now();d.push(`${r}/ui.json?t=${o}`)}for(let o of a)d.push(o);let P=0,g=d.length,R=o=>{let t=D.sceneData;s.onProgress&&s.onProgress(t.start+t.mult*o)},E=d.map(async o=>{let t=await fetch(o);return P++,R(P/g),t}),p=await Promise.all(E),u=[];for(let o of p)u.push(await o.json());let j={root:u[0],properties:u[1]},m=2;s.editorMode&&(j.ui=u[2],m+=1);let _={},f=Object.keys(n.nodes);for(let o=0;o<f.length;o++){let t=f[o],h=u[o+m];_[t]=h}return this.assemble(j,f,_)}static async assemble(s,n,r){let c={root:s.root,properties:s.properties,ui:s.ui};for(let a=0;a<n.length;a++){let i=n[a],l=r[i];this.insert_child_data(c.root,i,l)}return c}static insert_child_data(s,n,r){let c=n.split("/");if(c.length==1)s.nodes||(s.nodes={}),s.nodes[n]=r;else{let a=c.shift(),i=c.join("/"),l=s.nodes[a];this.insert_child_data(l,i,r)}}};var I="1648493294767",T="1648493294767",L={perspectiveCamera1:"1648493294767","perspectiveCamera1/events1":"1648493294767",MAT:"1648493294767","MAT/meshBasicBuilder_OCCLUSION":"1648493294767","MAT/meshStandardBuilder_OCCLUSION":"1648493294767",dogWithOcclusion:"1648493294767",spheres:"1648493294767",headWithOcclusion:"1648493294767",dogWithoutOcclusion:"1648493294767",dogWithOcclusionAndLighting:"1648493294767"},y={properties:I,root:T,nodes:L};var A=async e=>{let s=e.sceneDataRoot||"./polygonjs/scenes";return await S.importSceneData({urlPrefix:s+"/default",manifest:y,onProgress:e.onProgress})};var X=async function(e){let{onProgress:s,domElement:n,configureSceneData:r,autoPlay:c,sceneDataRoot:a,assetsRoot:i,libsRootPrefix:l}=e,d=e.runRegister!=null?e.runRegister:!0,g=(e.loadModules!=null?e.loadModules:!0)?["DRACOLoader","GLTFLoader"]:[],R=g.map(t=>import("./modules/"+t+(e.moduleImportSuffix||""))),E=[import("./loadSceneFromSceneData-R544KIOK.js"),A({onProgress:s,sceneDataRoot:a}),...R],p=await Promise.all(E),{Poly:u,loadSceneFromSceneData_default:j}=p[0],m=p[1];r&&r(m);let _=[];for(let t=2;t<p.length;t++)_.push(p[t]);let f=0;for(let t of g){let h=t+"Module";u.registerModule(_[f][h]),f++}return await j({onProgress:s,sceneData:m,domElement:n,runRegister:d,autoPlay:c,assetsRoot:i,libsRootPrefix:l})};export{X as loadSceneAndMountAsync_default};
